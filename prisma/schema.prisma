// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("SUPABASE_POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("SUPABASE_POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  whatsapp        String?   @unique
  whatsappVerified Boolean  @default(false)
  password        String?
  role            String    @default("USER")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  qrCodes         QRCode[]
  subscriptionType String   @default("FREE")
  subscriptionEnd DateTime?
}

model QRCode {
  id          String   @id @default(cuid())
  url         String
  description String?
  size        Int      @default(200)
  fgColor     String   @default("#000000")
  bgColor     String   @default("#FFFFFF")
  qrStyle     String   @default("squares")
  errorLevel  String   @default("H")
  logo        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
